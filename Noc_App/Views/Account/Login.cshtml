@model LoginViewModel;
@using Microsoft.Extensions.Options;
@inject IOptions<Noc_App.Helpers.GoogleCaptchaConfig> GoogleCaptchaConfig;
@inject IOptions<Noc_App.Helpers.PasswordEncryption> PasswordEncryptConfig;
<style>
    .close-icon:hover {
        cursor: pointer;
    }
</style>
@{
    ViewBag.Title = "Department Login";
    // Layout = "~/Views/Account/_AccountLayout.cshtml";
    Layout = "~/Views/HomeLanding/_HomeLayout.cshtml";
    string returnedUrl = ViewData["returnedUrl"] as string;
}
<main id="main">
    <section id="contact" class="contact">
        <div class="container">

            <div class="section-title">
                <h2>Department Login</h2>
                @* <p>Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.</p> *@
            </div>
            <div id="divLoader" style="display:none;text-align:center"> <img src="~/images/ajax-loader.gif" alt="Loader" /> </div>

            <div class="row" id="outerDiv">
                <div class="col-lg-12 mt-5 mt-lg-0 d-flex align-items-stretch">
                    <form action="Login?ReturnUrl=@System.Net.WebUtility.UrlEncode(returnedUrl)" id="loginForm" method="post" role="form" class="php-email-form">
                        <div class="row">
                            <div class="form-group mt-3">
                                <label asp-for="Email">Username/Email</label>
                                <input id="loginToken" value="0" type="hidden" asp-for="Token" />
                                @*  <div id="recaptcha-container"></div> *@
                                <div class="g-recaptcha" data-sitekey="@GoogleCaptchaConfig.Value.SiteKey" data-callback="onReCaptchaSuccess" data-size="invisible"></div>
                                @* <div class="g-recaptcha"
                                data-sitekey="@GoogleCaptchaConfig.Value.SiteKey"
                                data-callback="onReCaptchaSuccess"
                                data-size="invisible"></div> *@
                                <input asp-for="Email" class="form-control form-control-user" id="Email" placeholder="Enter Username/Email Address...">
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <div class="form-group mt-3">
                                <label asp-for="Password"></label>
                                <input type="hidden" id="hdnsuccess" />
                                <input asp-for="Password" id="Password" id="Password" class="form-control form-control-user" placeholder="Password">
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <div class="form-group mt-3">
                                <input id="showhide" type="checkbox" onclick="myFunction()">
                                <label for="showhide">Show Password</label>
                            </div>
                        </div>
                        <div class="my-3">
                            <div class="loading">Loading</div>
                            <div class="error-message"></div>
                            <div class="sent-message">Your message has been sent. Thank you!</div>
                        </div>
                        <div class="row">
                            <div id="resultloginMessage" class="mt-3 error-message" style="display:none;">
                                <div class="alert alert-success"><span class="close-icon" style="float:right" onclick="toggleValue('login')">&times;</span></div>
                            </div>
                        </div>
                        <div class="row">
                            <div asp-validation-summary="All" class="text-danger validateAll"></div>
                        </div>

                        <div class="text-center"><button type="submit" id="login" style="visibility:hidden" class="btn btn-success btn-user btn-block">Login</button></div>
                    </form>
                </div>

            </div>

        </div>
    </section>
    <div class="modal" id="myModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
         aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                @* <form method="post" asp-action="Reject" asp-controller="ApprovalProcess"> *@
                <div class="modal-header">
                    <input type="hidden" id="id" name="id" />
                    <h5 class="modal-title" id="exampleModalLabel"><label id="dvBranch">Login In Progress.....</label></h5>
                    @*  <button class="close" type="button" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span></button> *@

                </div>
                <div class="modal-body" style="max-height: 700px;overflow-y:scroll;">
                    @*         <form action="RedirecToLoginRole" id="loginByRoleForm" method="post" role="form" class="php-email-form">
                    <input type="hidden" name="Name" id="Name" value="" /><input type="hidden" name="Designation" id="Designation" value="" /><input type="hidden" name="EmpID" id="EmpID" value="" />
                    <input type="hidden" name="DistrictID" id="DistrictID" value="" /><input type="hidden" name="DivisionID" id="DivisionID" value="" />
                    <input type="hidden" name="RoleID" id="RoleID" value="" /><input type="hidden" name="Email" id="REmail" value="" /><input type="hidden" name="role" id="role" value=""/> *@
                    <table class="table table-bordered" id="tblroles" width="100%" cellspacing="0">
                        <tbody id="tbroles">
                            @* <tr>
                            <td>
                            <div class="text-center"><button type="submit" id="login" style="width:100%;background-color:brown" class="btn btn-success btn-user btn-block">Login</button></div>
                            </td>
                            </tr> *@
                        </tbody>
                    </table>
                    @* </form> *@
                </div>
                @*  <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
                </div> *@
                @* </form> *@
            </div>
        </div>
    </div>

</main>
@section Scripts {
    <script src="https://www.google.com/recaptcha/api.js?render=@GoogleCaptchaConfig.Value.SiteKey"></script>
    <script>
        grecaptcha.ready(function () {
            $('button[type=submit]').css("visibility", "hidden");
            grecaptcha.execute('@GoogleCaptchaConfig.Value.SiteKey', { action: 'submit' }).then(function (token) {
                // Add your logic to submit to your backend server here.
                $('#loginToken').val(token);
                $('button[type=submit]').css("visibility", "unset");
            });
        });
        function onReCaptchaSuccess(token) {
            $('#loginToken').val(token);
        }
        function setRecaptchaResponse() {
            if (typeof grecaptcha !== 'undefined') {
                grecaptcha.reset();  // Reset the reCAPTCHA widget
                grecaptcha.execute();
            } else {
                console.error("reCAPTCHA is not initialized.");
            }
        }
        function myFunction() {
            var x = document.getElementById("Password");
            if (x.type === "password") {
                x.type = "text";
            } else {
                x.type = "password";
            }
        }
        function encryptPassword(password) {
            const secretKey = '@PasswordEncryptConfig.Value.SecretKey';
            var key = CryptoJS.enc.Utf8.parse('@PasswordEncryptConfig.Value.SecretKey');
            // Encrypt the password using the secret key
            const encryptedPassword = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(password), key, {

                mode: CryptoJS.mode.ECB,
                padding: CryptoJS.pad.Pkcs7
            });
            return encryptedPassword.toString();
        }
    </script>
    <script src="~/modulejs/loginscript.js"></script>
}
