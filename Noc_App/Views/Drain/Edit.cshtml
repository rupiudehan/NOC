@model DrainViewModel
@{
    ViewBag.Title = "Edit Drain Detail";
}
<h1 class="h3 mb-4 text-gray-800">Edit Drain</h1>
<div class="row">

    <div class="col-lg-12">

        <!-- Circle Buttons -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Edit</h6>
            </div>
            <div class="card-body">
                <form class="user" asp-action="Edit" asp-controller="Drain" method="post">
                    <input type="hidden" asp-for="Id" />
                    <div class="row">
                        <div class="col-lg-4">
                        <div class="form-group">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control form-control-user" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        </div>

                        <div class="col-lg-8">
                            <label class="control-label" style="font-weight:bolder">Location Detail</label>
                        <table id="locationTable" class="table">
                            <thead>
                                <tr>
                                    @* <th>#</th> *@
                                    <th>Latitude</th>
                                    <th>Longitude</th>
                                    <!-- Add more columns as needed -->
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.DrainCoordinates.Count; i++)
                                {
                                        string Latitude = @"Latitude" + i;
                                        string Longitude = @"Longitude" + i;
                                        <tr class="coordinate-entry">
                                        @* <td>1</td> *@
                                            <td>
                                                <input type="hidden" asp-for="DrainCoordinates[i].Id" />
                                                <input type="text" asp-for=DrainCoordinates[i].Latitude id="@Latitude" class="form-control numericField" placeholder="Latitude" />
                                            </td>
                                            <td><input type="text" asp-for=DrainCoordinates[i].Longitude id="@Longitude" class="form-control numericField" placeholder="Longitude" /></td>

                                        <!-- Render more columns as needed -->
                                    </tr>
                                }
                            </tbody>
                        </table>
                        </div>
                    </div>
                    <div class="row col-sm-2 offset-sm-10">
                        <button type="button" class="btn btn-success" id="addMoreBtn">Add More</button>
                    </div>
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="row">
                        <div class="col-lg-6">
                            <button type="submit" class="btn btn-primary btn-user btn-block">Update</button>
                        </div>
                        <div class="col-lg-6">
                            <a class="btn btn-secondary btn-user btn-block" asp-controller="Drain" asp-action="Index">Cancel</a>
                        </div>
                    </div>
                </form>
            </div>
        </div>

    </div>



</div>




@* <div id="partialContainer"></div> *@
@section Scripts {
    <script>
        // Allow only numbers in the input field
        $(document).ready(function () {
            // Allow only numbers in the input field
            $("body").on("input", ".numericField", function () {
                // Remove non-numeric characters using a regular expression
                $(this).val($(this).val().replace(/[^0-9.]/g, ''));

                // Remove multiple dots, leaving only one
                if ($(this).val().split('.').length > 2) {
                    $(this).val($(this).val().replace(/\.+$/, ''));
                }
            });
        });
    </script>
    <script>
                        var coordinateIndex = @Model.DrainCoordinates.Count;

        $("#addMoreBtn").on("click", function () {
            var newEntry = $(".coordinate-entry:first").clone();
            newEntry.find("input").each(function () {
                var name = $(this).attr("name").replace("[" + (coordinateIndex - 1) + "]", "[" + coordinateIndex + "]");
                var id = $(this).attr("id").replace("0", coordinateIndex);
                $(this).attr("name", name);
                $(this).attr("id", id);
                $(this).val("");
                
            });
            coordinateIndex++;
            $("#locationTable tbody").append(newEntry);
        });
        // $(document).ready(function () {
        //     var count = 2;
        //     $("#addMoreBtn").click(function () {
        //         var newRow = $("<tr>");
        //         newRow.append("<td>" + count + "</td>");
        //         newRow.append("<td><input type='text' name='Latitude' /></td>");
        //         newRow.append("<td><input type='text' name='Longitude' /></td>");
        //         newRow.append('<td><button class="btn btn-danger" onclick="deleteRow(this)">Delete</button></td>')
        //         // Add more input fields as needed

        //         $("#locationTable tbody").append(newRow);
        //         count++;
        //     });
        // });

        // function deleteRow(button) {
        //     var row = button.parentNode.parentNode;
        //     row.parentNode.removeChild(row);
        // }
    </script>
}
