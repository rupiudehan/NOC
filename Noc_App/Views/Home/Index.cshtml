@model DashboardDropdownViewModelView
@{
    // Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";
}

<h1 class="h3 mb-4 text-gray-800">Dashboard</h1>

@if (Model != null)
{
    <div class="row">

        <div class="col-lg-12">
            @if (Model != null)
            {
                <div id="divLoader" style="display:none;text-align:center"> <img src="~/images/ajax-loader.gif" alt="Loader" /> </div>
                <!-- Circle Buttons -->
                <div class="card shadow mb-4 drpd">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary">Charts</h6>
                    </div>
                    <div class="card-body">
                        @if (Model.RoleName.ToUpper() != "JUNIOR ENGINEER" && Model.RoleName.ToUpper() != "SUB DIVISIONAL OFFICER")
                        {
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <input type="hidden" asp-for="RoleName" id="RoleName" />
                                        <input type="hidden" asp-for="hdnDivisionId" id="hdnDivisionId" />
                                        <input type="hidden" asp-for="hdnSubDivisionId" id="hdnSubDivisionId" />
                                        <label asp-for="SelectedDivisionId" class="control-label">Division</label>
                                        <select asp-for="SelectedDivisionId" id="SelectedDivisionId" asp-items="@Model.Divisions" class="form-control">

                                        </select>
                                    </div>
                                </div>
                                @if (Model.RoleName.ToUpper() == "EXECUTIVE ENGINEER" || Model.RoleName.ToUpper() == "JUNIOR ENGINEER" || Model.RoleName.ToUpper() == "SUB DIVISIONAL OFFICER")
                                {
                                    @* @if (Model.SubDivisions.Count() > 0)
                                { *@
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            <label asp-for="SelectedSubDivisionId" class="control-label"></label>
                                            <select asp-for="SelectedSubDivisionId" id="SelectedSubDivisionId" asp-items="@Model.SubDivisions" class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                    @* }
                                else
                                {
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            <label asp-for="SelectedSubDivisionId" class="control-label"></label>
                                            <select asp-for="SelectedSubDivisionId" id="SelectedSubDivisionId" disabled class="form-control">
                                            </select>
                                        </div>
                                    </div>
                                } *@
                                }
                            </div>
                            <div class="row">
                                <div class=" col-md-12 barcontainer">
                                    <div style="max-width:100%;overflow-x:scroll;"> 
                                        <div id="chart_div" class="chart_wrap"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class=" col-md-12 barcontainer">
                                    <div id="chart_div_Pendency" class="chart_wrap"></div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            @* <form method="post" asp-action="Reject" asp-controller="ApprovalProcess"> *@
            <div class="modal-header">
                <input type="hidden" id="id" name="id" />
                <h5 class="modal-title" id="exampleModalLabel"><label id="dvBranch">Pendency Report</label></h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" style="max-height: 500px;overflow-y:scroll;">
                <table class="table table-bordered" id="tblPendancy" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Division</th>
                            <th>Application ID</th>
                            <th>Pending With</th>
                        </tr>
                    </thead>
                    <tbody id="tbPendancy">
                    </tbody>
                </table>
            </div>
            @* <div class="modal-body">
            <div class="row">
            <div class="col-lg-12">
            <div class="form-group">
            <label name="lblRemarks" class="control-label">Remarks</label>
            <input name="Remarks" id="Remarks" class="form-control form-control-user" />
            </div>
            </div>
            </div>
            </div> *@
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>
                @* <button class="btn btn-danger" type="submit">Reject</button> *@
                @* <a class="btn btn-primary" asp-action="Logout" asp-controller="Account">Logout</a> *@
            </div>
            @* </form> *@
        </div>
    </div>
</div>
@section  Scripts {
    <script>
        // $(window).resize(function () {
        //     LoadBarPendancyChart();
        // });
        
        google.charts.load('current', { packages: ['corechart', 'bar'], fontName: 'Arial' });
        google.charts.setOnLoadCallback(drawMultSeries);
        // google.charts.setOnLoadCallback(function () {
        //     // Force chart to redraw upon resize
        //     $(window).resize(function () {
        //         drawMultSeries();
        //     });

        //     drawMultSeries();
        // });
        function drawMultSeries() {
            var DivisionId = $('#hdnDivisionId').val();
            var subdivisionId = '0';
            var roleName=$('#RoleName').val();
            if (roleName == 'EXECUTIVE ENGINEER' || roleName == 'JUNIOR ENGINEER' || roleName == 'SUB DIVISIONAL OFFICER') {
                subdivisionId = $('#hdnSubDivisionId').val();
            }
            var options = {
                title: 'Pendency Role Wise ',
                width: 3000,
                height: 700,
                responsive:true,
                hAxis: {
                    title: 'Division',
                    bar: { groupWidth: '30%' },
                },
                vAxis: {
                    title: 'Pending Applications To Forward (in numbers)', format: ''
                },
            };
            $("#divLoader").show(); $('.barcontainer,.drpd').hide();
            $.ajax({
                url: "/Home/GetRoleLevel",
                type: "POST",
                data: { divisiondetailId: DivisionId, subdivisiondetailId: subdivisionId, role: roleName },
                complete: function (r) {
                    $("#divLoader").hide();
                    $('.barcontainer,.drpd').show();
                    $(".barcontainer text:contains('0')").each(function () {
                        var text = $(this).text();
                        if (text == '0') $(this).hide();
                    });

                },
                success: function (r) {
                    var isValidNumNonZero = 0
                    var values = '[';
                    var outervalues = '';
                    $.each(r, function (key, value) {
                        $.each(value, function (key1, value1) {

                            if (!isNaN(value1)) { if (value1 != '0') isValidNumNonZero = 1 }
                        });
                        if (isValidNumNonZero == 1) {
                            $("#chart_div").show();
                            var data = google.visualization.arrayToDataTable(r);

                            var totalColumns = data['bf'].length - 1
                            var view = new google.visualization.DataView(data);
                            var columns = [];
                            for (var i = 0; i <= totalColumns; i++) {
                                if (i > 0) {
                                    columns.push(i);
                                    columns.push({
                                        calc: "stringify",
                                        sourceColumn: i,
                                        type: "string",
                                        role: "annotation"
                                    });

                                } else {
                                    columns.push(i);
                                }
                            }

                            view.setColumns(columns);
                            var chart = new google.visualization.ColumnChart($("#chart_div")[0]);
                            chart.draw(view, options);
                            google.visualization.events.addListener(chart, 'select', setOption);
                            function setOption(e) {
                                var selection = chart.getSelection();
                                item = selection[0]
                                var column = 0;
                                if (selection.length > 0) {
                                    if ((item.column) == 1)
                                        column = item.column;
                                    else if ((item.column - 1) == 2)
                                        column = item.column - 1;
                                    else if ((item.column - 2) == 3)
                                        column = item.column - 2;
                                    else if ((item.column - 3) == 4)
                                        column = item.column - 3;
                                    else if ((item.column - 4) == 5)
                                        column = item.column - 4;
                                    else if ((item.column - 5) == 6)
                                        column = item.column - 5;
                                    else if ((item.column - 6) == 7)
                                        column = item.column - 6;
                                    else if ((item.column - 7) == 8)
                                        column = item.column - 7;
                                    var category = data.getValue(item.row, 0);
                                    // console.log(DivisionId + '-' + subdivisionId + '-' + category + '-' + data['bf'][column]['label']);
                                    LoadReport(DivisionId, subdivisionId, data['bf'][column]['label']);
                                } else $("#myModal").modal();
                            }
                        } else $("#chart_div").hide();
                    });
                },
                failure: function (r) {
                    alert(JSON.stringify(r))
                },
                error: function (r) {
                    alert(r.d);
                }
            });
        }

        // function LoadBarPendancyChart() {
        //     // google.charts.load('current', { packages: ['corechart', 'bar'] });
        //     // google.charts.setOnLoadCallback(drawMultSeries);

        //     drawMultSeries();
        // }
        function populateDropdown(data, dropdownId) {
            var dropdown = $("#Selected" + dropdownId);
            $.each(data, function (key, value) {
                dropdown.append('<option value="' + value.value + '">' + value.text + '</option>');
            });
        }
        $(function () {
            $("#SelectedDivisionId").change(function () {
                var divisionId = $(this).val();
                var role = $('#RoleName').val();
                $('#hdnDivisionId').val(divisionId);
                if (role == 'EXECUTIVE ENGINEER' || role == 'JUNIOR ENGINEER' || role == 'SUB DIVISIONAL OFFICER') {
                    $.ajax({
                        url: "/Home/GetSubDivisions",
                        type: "POST",
                        data: { divisionId: divisionId },
                        complete: function (r) {
                            $("#divLoader").hide();
                            $('.barcontainer,.drpd').show();
                            $(".barcontainer text:contains('0')").each(function () {
                                var text = $(this).text();
                                if (text == '0') $(this).hide();
                            });
                        },
                        success: function (data) {
                            populateDropdown(data, "SubDivisionId");
                            var subdivisionId = $('#SelectedSubDivisionId').val();
                            $('#hdnSubDivisionId').val(subdivisionId);

                        },
                        failure: function (f) {
                            alert(f);
                        },
                        error: function (e) {
                            alert('Error ' + e);
                        }
                    });
                }else{
                    LoadBarPendancyChart();
                }
            });
            $("#SelectedSubDivisionId").change(function () {
                var subdivisionId = $(this).val();
                $('#hdnSubDivisionId').val(subdivisionId);
                LoadBarPendancyChart();
            });
            LoadBarPendancyChart();
        });
        // Notice that e is not used or needed.

    </script>
    <script>
        function LoadBarPendancyChart() {
            // var rolename = $('#RoleName').val();
            // var DivisionId = $('#hdnDivisionId').val();
            // var subdivisionId = $('#hdnSubDivisionId').val();
            // $.ajax({
            //     url: "/Home/GetRoleLevelPend",
            //     type: "POST",
            //     data: { divisiondetailId: DivisionId, subdivisiondetailId: subdivisionId, role: rolename },
            //     complete: function (r) {
            //         $("#divLoader").hide();
            //         $('.barcontainer,.drpd').show();
            //         $(".barcontainer text:contains('0')").each(function () {
            //             var text = $(this).text();
            //             if (text == '0') $(this).hide();
            //         });
            //         var subdivisionId = $('#SelectedSubDivisionId').val();
            //     },
            //     success: function (data) {
            //         google.charts.load('current', {
            //             'packages': ['corechart']
            //         });
            //         google.charts.setOnLoadCallback(function () {
            //             drawChart(data);
            //         });
            //     },
            //     failure: function (f) {
            //         alert(f);
            //     },
            //     error: function (e) {
            //         alert('Error ' + e);
            //     }
            // });
            drawMultSeries();
        }
        // function drawChart(result)
        // {

        //     var data=new google.visualization.DataTable();
        //     data.addColumn('string', 'Role');
        //     data.addColumn('number', 'Pendency');
        //     var dataArray = [];
        //     $.each(result, function (i, obj) {
        //         dataArray.push([obj.roleName, obj.pendency]);
        //     });
        //     data.addRows(dataArray);
        //     var columnChartOptions = 
        //     {
        //         title:"Role Level Pendency",
        //         width:1200,
        //         height:700,
        //         bar: { groupWidth: "20%" }
        //     }

        //     var columnChart = new google.visualization.ColumnChart(document.getElementById('chart_div_Pendency'));
        //     columnChart.draw(data, columnChartOptions);
        // }
    </script>
    <script>
        function LoadReport(DivisionId, subdivisionId, roleName) {
            var body = $('#tbPendancy');
            var table = $("#tblPendancy");
            //$("#myModal").modal(); $("#myModal").addClass('show');
            $("#myModal").hide();
            body.empty();
            //table.DataTable().clear().destroy();
            $("#divLoader").show(); $('.barcontainer,.drpd').hide();
            $.ajax({
                url: "/Home/GetRoleLevelPendencyReport",
                type: "POST",
                data: { divisiondetailId: DivisionId, subdivisiondetailId: subdivisionId, role: roleName },
                complete: function (r) {
                    $("#myModal").modal(); $("#myModal").addClass('show');
                    $("#divLoader").hide();
                    $('.barcontainer,.drpd').show();
                    $(".barcontainer text:contains('0')").each(function () {
                        var text = $(this).text();
                        if (text == '0') $(this).hide();
                    });

                },
                success: function (r) {
                    if (r != null) {
                        var count = 1; var len = r.length;
                        $.each(r, function (key, value) {
                            var tr = '<tr>';
                            tr += '<td>' + count + '</td>';
                            // if (count == 1) { $('#dvBranch').text("Branch: " + value.BranchName); $('#dvLevel').text('Level: ' + LevelType); $('#dvRule').text('Under: ' + ActionName); }
                            tr += '<td>' + value.division + '</td>';
                            tr += '<td>' + value.applicationID + '</td>';
                            tr += '<td>' + value.processedToRole + '</td>';
                            tr += '</tr>';
                            body.append(tr);
                            count++;
                        });
                    }
                },
                failure: function (r) {
                    alert(r.d);
                },
                error: function (r) {
                    alert(r.d);
                }
            });
        }
    </script>
}

