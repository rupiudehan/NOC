// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noc_App.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NocApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240614102653_addeddaysforadeandDD")]
    partial class addeddaysforadeandDD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Noc_App.Models.ChallanDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationId")
                        .HasColumnType("text");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("text");

                    b.Property<string>("add1")
                        .HasColumnType("text");

                    b.Property<string>("add2")
                        .HasColumnType("text");

                    b.Property<string>("add3")
                        .HasColumnType("text");

                    b.Property<string>("add4")
                        .HasColumnType("text");

                    b.Property<string>("add5")
                        .HasColumnType("text");

                    b.Property<string>("addLine1")
                        .HasColumnType("text");

                    b.Property<string>("addLine2")
                        .HasColumnType("text");

                    b.Property<string>("addPincode")
                        .HasColumnType("text");

                    b.Property<string>("challanDate")
                        .HasColumnType("text");

                    b.Property<string>("companyName")
                        .HasColumnType("text");

                    b.Property<string>("ddoCode")
                        .HasColumnType("text");

                    b.Property<string>("deptCode")
                        .HasColumnType("text");

                    b.Property<string>("deptRefNo")
                        .HasColumnType("text");

                    b.Property<string>("district")
                        .HasColumnType("text");

                    b.Property<string>("emailId")
                        .HasColumnType("text");

                    b.Property<string>("expiryDate")
                        .HasColumnType("text");

                    b.Property<string>("fURL")
                        .HasColumnType("text");

                    b.Property<string>("mobNumber")
                        .HasColumnType("text");

                    b.Property<string>("noOfTrans")
                        .HasColumnType("text");

                    b.Property<string>("nonTrsyAmt")
                        .HasColumnType("text");

                    b.Property<string>("payLocCode")
                        .HasColumnType("text");

                    b.Property<string>("payerName")
                        .HasColumnType("text");

                    b.Property<string>("sURL")
                        .HasColumnType("text");

                    b.Property<string>("tehsil")
                        .HasColumnType("text");

                    b.Property<string>("teleNumber")
                        .HasColumnType("text");

                    b.Property<string>("totalAmt")
                        .HasColumnType("text");

                    b.Property<string>("trsyAmt")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChallanDetails");
                });

            modelBuilder.Entity("Noc_App.Models.DashboardPendencyAll", b =>
                {
                    b.Property<string>("CHIEF_ENGINEER_HQ")
                        .HasColumnType("text");

                    b.Property<string>("CIRCLE_OFFICER")
                        .HasColumnType("text");

                    b.Property<string>("Division")
                        .HasColumnType("text");

                    b.Property<string>("EXECUTIVE_ENGINEER")
                        .HasColumnType("text");

                    b.Property<string>("EXECUTIVE_ENGINEER_HQ")
                        .HasColumnType("text");

                    b.Property<string>("JUNIOR_ENGINEER")
                        .HasColumnType("text");

                    b.Property<string>("SUB_DIVISIONAL_OFFICER")
                        .HasColumnType("text");

                    b.Property<string>("dws")
                        .HasColumnType("text");

                    b.ToTable("DashboardPendencyAll");
                });

            modelBuilder.Entity("Noc_App.Models.DaysCheckMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CheckFor")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int>("IsRelatedToForward")
                        .HasColumnType("integer");

                    b.Property<int>("IsRelatedToIssue")
                        .HasColumnType("integer");

                    b.Property<double>("NoOfDays")
                        .HasColumnType("double precision");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleID");

                    b.ToTable("DaysCheckMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CheckFor = "Executive Engineer",
                            Code = "EEF",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 1.0,
                            UserRoleID = 7
                        },
                        new
                        {
                            Id = 9,
                            CheckFor = "Executive Engineer",
                            Code = "EES",
                            IsRelatedToForward = 0,
                            IsRelatedToIssue = 1,
                            NoOfDays = 2.0,
                            UserRoleID = 7
                        },
                        new
                        {
                            Id = 2,
                            CheckFor = "Chief Engineer",
                            Code = "CEHQF",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 3.0,
                            UserRoleID = 10
                        },
                        new
                        {
                            Id = 3,
                            CheckFor = "Junior Engineer",
                            Code = "JE",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 2.0,
                            UserRoleID = 60
                        },
                        new
                        {
                            Id = 4,
                            CheckFor = "Sub Divisional Officer",
                            Code = "SDO",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 2.0,
                            UserRoleID = 67
                        },
                        new
                        {
                            Id = 5,
                            CheckFor = "XEN HO Drainage",
                            Code = "EEHQ",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 3.0,
                            UserRoleID = 128
                        },
                        new
                        {
                            Id = 6,
                            CheckFor = "XEN/DWS",
                            Code = "D",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 0.5,
                            UserRoleID = 83
                        },
                        new
                        {
                            Id = 7,
                            CheckFor = "Principal Secretary",
                            Code = "PS",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 1.0,
                            UserRoleID = 6
                        },
                        new
                        {
                            Id = 8,
                            CheckFor = "Superintending Engineer",
                            Code = "CO",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 2.0,
                            UserRoleID = 8
                        },
                        new
                        {
                            Id = 10,
                            CheckFor = "ADE/DWS",
                            Code = "ADE",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 1.0,
                            UserRoleID = 90
                        },
                        new
                        {
                            Id = 11,
                            CheckFor = "Director Drainage",
                            Code = "DD",
                            IsRelatedToForward = 1,
                            IsRelatedToIssue = 0,
                            NoOfDays = 0.5,
                            UserRoleID = 35
                        });
                });

            modelBuilder.Entity("Noc_App.Models.DistrictDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LGD_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("DistrictDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 27,
                            Name = "Amritsar",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 605,
                            Name = "Barnala",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 28,
                            Name = "Bathinda",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 29,
                            Name = "Faridkot",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 30,
                            Name = "Fatehgarh Sahib",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 651,
                            Name = "Fazilka",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 31,
                            Name = "Ferozepur",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 32,
                            Name = "Gurdaspur",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 33,
                            Name = "Hoshiarpur",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 34,
                            Name = "Jalandhar",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 35,
                            Name = "Kapurthala",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 36,
                            Name = "Ludhiana",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 737,
                            Name = "Malerkotla",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 37,
                            Name = "Mansa",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 38,
                            Name = "Moga",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 662,
                            Name = "Pathankot",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 41,
                            Name = "Patiala",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 42,
                            Name = "Rupnagar",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 608,
                            Name = "S.A.S Nagar Mohali",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 43,
                            Name = "Sangrur",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 21,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 40,
                            Name = "ShahidBhagat Singh Nagar",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 22,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 39,
                            Name = "Sri Muktsar Sahib",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 23,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LGDID = 609,
                            Name = "Tarn Taran",
                            UpdatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Noc_App.Models.DivisionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DistrictId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("DivisionDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("ApprovalID")
                        .HasColumnType("integer");

                    b.Property<int>("GrantID")
                        .HasColumnType("integer");

                    b.Property<int>("ProcessLevel")
                        .HasColumnType("integer");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedByName")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedByRole")
                        .HasColumnType("text");

                    b.Property<DateTime>("ProcessedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ProcessedToName")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedToRole")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedToUser")
                        .HasColumnType("text");

                    b.Property<int>("RecommendationID")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalID");

                    b.HasIndex("GrantID");

                    b.HasIndex("RecommendationID");

                    b.ToTable("GrantApprovalDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GrantApprovalMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "P",
                            Name = "Pending"
                        },
                        new
                        {
                            Id = 2,
                            Code = "R",
                            Name = "Reject"
                        },
                        new
                        {
                            Id = 3,
                            Code = "F",
                            Name = "Forward"
                        },
                        new
                        {
                            Id = 4,
                            Code = "A",
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SF",
                            Name = "ShortFall"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalProcessDocumentsDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CatchmentAreaAndFlowPath")
                        .HasColumnType("text");

                    b.Property<string>("CrossSectionOrCalculationSheetReportPath")
                        .HasColumnType("text");

                    b.Property<string>("DistanceFromCreekPath")
                        .HasColumnType("text");

                    b.Property<string>("DrainLSectionPath")
                        .HasColumnType("text");

                    b.Property<string>("GISOrDWSReportPath")
                        .HasColumnType("text");

                    b.Property<long>("GrantApprovalID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsKMLByApplicantValid")
                        .HasColumnType("boolean");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedByName")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedByRole")
                        .HasColumnType("text");

                    b.Property<DateTime>("ProcessedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SiteConditionReportPath")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedByName")
                        .HasColumnType("text");

                    b.Property<string>("UpdatedByRole")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GrantApprovalID")
                        .IsUnique();

                    b.ToTable("GrantApprovalProcessDocumentsDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressProofPhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("ApplicantEmailID")
                        .HasColumnType("text");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationID")
                        .HasColumnType("text");

                    b.Property<string>("AuthorizationLetterPhotoPath")
                        .HasColumnType("text");

                    b.Property<string>("CertificateFilePath")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FaradFilePath")
                        .HasColumnType("text");

                    b.Property<string>("Hadbast")
                        .HasColumnType("text");

                    b.Property<string>("IDProofPhotoPath")
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsExtension")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsForwarded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPending")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSentBack")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShortFall")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShortFallCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KMLFilePath")
                        .HasColumnType("text");

                    b.Property<string>("KMLLinkName")
                        .HasColumnType("text");

                    b.Property<string>("LayoutPlanFilePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NocNumber")
                        .HasColumnType("text");

                    b.Property<int>("NocPermissionTypeID")
                        .HasColumnType("integer");

                    b.Property<int>("NocTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProjectTypeDetail")
                        .HasColumnType("text");

                    b.Property<int>("PlanSanctionAuthorityId")
                        .HasColumnType("integer");

                    b.Property<string>("PlotNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PreviousDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProcessLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("SentBackLevel")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ShortFallCompletedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ShortFallLevel")
                        .HasColumnType("integer");

                    b.Property<string>("ShortFallReportedById")
                        .HasColumnType("text");

                    b.Property<string>("ShortFallReportedByName")
                        .HasColumnType("text");

                    b.Property<string>("ShortFallReportedByRole")
                        .HasColumnType("text");

                    b.Property<DateTime>("ShortFallReportedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SiteAreaUnitId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UploadedBy")
                        .HasColumnType("text");

                    b.Property<string>("UploadedByRole")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VillageID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NocPermissionTypeID");

                    b.HasIndex("NocTypeId");

                    b.HasIndex("PlanSanctionAuthorityId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("SiteAreaUnitId");

                    b.HasIndex("VillageID");

                    b.ToTable("GrantDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantKhasraDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GrantID")
                        .HasColumnType("integer");

                    b.Property<double>("KanalOrBigha")
                        .HasColumnType("double precision");

                    b.Property<string>("KhasraNo")
                        .HasColumnType("text");

                    b.Property<double>("MarlaOrBiswa")
                        .HasColumnType("double precision");

                    b.Property<double>("SarsaiOrBiswansi")
                        .HasColumnType("double precision");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GrantID");

                    b.HasIndex("UnitId");

                    b.ToTable("GrantKhasraDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantPaymentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GrantID")
                        .HasColumnType("integer");

                    b.Property<string>("PayerEmail")
                        .HasColumnType("text");

                    b.Property<string>("PayerName")
                        .HasColumnType("text");

                    b.Property<string>("PaymentOrderId")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("deptRefNo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GrantID");

                    b.ToTable("GrantPaymentDetails");
                });

            modelBuilder.Entity("Noc_App.Models.GrantRejectionShortfallSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("GrantApprovalId")
                        .HasColumnType("bigint");

                    b.Property<int>("IsCompleted")
                        .HasColumnType("integer");

                    b.Property<int>("SectionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GrantApprovalId");

                    b.ToTable("GrantRejectionShortfallSection");
                });

            modelBuilder.Entity("Noc_App.Models.GrantSectionsDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("SectionCode")
                        .HasColumnType("text");

                    b.Property<int?>("SectionId")
                        .HasColumnType("integer");

                    b.Property<string>("SectionName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("GrantSectionsDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SectionCode = "P",
                            SectionName = "Project"
                        },
                        new
                        {
                            Id = 2,
                            SectionCode = "AD",
                            SectionName = "Address"
                        },
                        new
                        {
                            Id = 3,
                            SectionCode = "KH",
                            SectionName = "Khasra"
                        },
                        new
                        {
                            Id = 4,
                            SectionCode = "K",
                            SectionName = "KML"
                        },
                        new
                        {
                            Id = 5,
                            SectionCode = "AP",
                            SectionName = "Applicant"
                        },
                        new
                        {
                            Id = 6,
                            SectionCode = "OW",
                            SectionName = "Owner"
                        },
                        new
                        {
                            Id = 7,
                            SectionCode = "PM",
                            SectionName = "Permission"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.NocPermissionTypeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NocPermissionTypeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Residential"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Industrial"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Commercial"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.NocTypeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("NocTypeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "New"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Extension of Existing Project"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.OwnerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("GrantId")
                        .HasColumnType("integer");

                    b.Property<string>("MobileNo")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OwnerTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GrantId");

                    b.HasIndex("OwnerTypeId");

                    b.ToTable("OwnerDetails");
                });

            modelBuilder.Entity("Noc_App.Models.OwnerTypeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OwnerTypeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Owner"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Partners"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chief Executive"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Full Time Directors"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.PlanSanctionAuthorityMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlanSanctionAuthorityMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "C",
                            Name = "Country"
                        },
                        new
                        {
                            Id = 2,
                            Code = "L",
                            Name = "Local"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.ProjectTypeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProjectTypeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Residentials"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Industrial"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Commercial"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Any Other"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.RecommendationDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecommendationDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "A",
                            Name = "For Approval"
                        },
                        new
                        {
                            Id = 2,
                            Code = "R",
                            Name = "For Rejection"
                        },
                        new
                        {
                            Id = 3,
                            Code = "NA",
                            Name = "Nothing"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.SiteAreaUnitDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SiteAreaUnitDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bigha/Biswa/Biswansi - Type-I(Kachcha)"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kanal/Marla/Sarsai"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bigha/Biswa/Biswansi - Type-II(Pucca)"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.SiteUnitMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("DivideBy")
                        .HasColumnType("double precision");

                    b.Property<int>("SiteAreaUnitId")
                        .HasColumnType("integer");

                    b.Property<double>("Timesof")
                        .HasColumnType("double precision");

                    b.Property<string>("UnitCode")
                        .HasColumnType("text");

                    b.Property<string>("UnitName")
                        .HasColumnType("text");

                    b.Property<double>("UnitValue")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("SiteAreaUnitId");

                    b.ToTable("SiteUnitMaster");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DivideBy = 32.270000000000003,
                            SiteAreaUnitId = 1,
                            Timesof = 1.0,
                            UnitCode = "M",
                            UnitName = "Biswa",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 2,
                            DivideBy = 1.673,
                            SiteAreaUnitId = 1,
                            Timesof = 1.0,
                            UnitCode = "K",
                            UnitName = "Bigha",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 3,
                            DivideBy = 32.310000000000002,
                            SiteAreaUnitId = 1,
                            Timesof = 1.0,
                            UnitCode = "S",
                            UnitName = "Biswansi",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 4,
                            DivideBy = 32.270000000000003,
                            SiteAreaUnitId = 3,
                            Timesof = 3.0,
                            UnitCode = "M",
                            UnitName = "Biswa",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 5,
                            DivideBy = 1.673,
                            SiteAreaUnitId = 3,
                            Timesof = 3.0,
                            UnitCode = "K",
                            UnitName = "Bigha",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 6,
                            DivideBy = 32.310000000000002,
                            SiteAreaUnitId = 3,
                            Timesof = 3.0,
                            UnitCode = "S",
                            UnitName = "Biswansi",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 7,
                            DivideBy = 8.0,
                            SiteAreaUnitId = 2,
                            Timesof = 1.0,
                            UnitCode = "K",
                            UnitName = "Kanal",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 8,
                            DivideBy = 160.0,
                            SiteAreaUnitId = 2,
                            Timesof = 1.0,
                            UnitCode = "M",
                            UnitName = "Marla",
                            UnitValue = 1.0
                        },
                        new
                        {
                            Id = 9,
                            DivideBy = 1440.0,
                            SiteAreaUnitId = 2,
                            Timesof = 1.0,
                            UnitCode = "S",
                            UnitName = "Sarsai",
                            UnitValue = 1.0
                        });
                });

            modelBuilder.Entity("Noc_App.Models.SubDivisionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DivisionId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("SubDivisionDetails");
                });

            modelBuilder.Entity("Noc_App.Models.TehsilBlockDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int>("LGD_ID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("SubDivisionId")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SubDivisionId");

                    b.ToTable("TehsilBlockDetails");
                });

            modelBuilder.Entity("Noc_App.Models.UserRoleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppRoleName")
                        .HasColumnType("text");

                    b.Property<int>("RoleLevel")
                        .HasColumnType("integer");

                    b.Property<string>("RoleName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserRoleDetails");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            AppRoleName = "EXECUTIVE ENGINEER",
                            RoleLevel = 7,
                            RoleName = "Executive Engineer"
                        },
                        new
                        {
                            Id = 10,
                            AppRoleName = "CHIEF ENGINEER HQ",
                            RoleLevel = 3,
                            RoleName = "Chief Engineer"
                        },
                        new
                        {
                            Id = 60,
                            AppRoleName = "JUNIOR ENGINEER",
                            RoleLevel = 9,
                            RoleName = "Junior Engineer"
                        },
                        new
                        {
                            Id = 67,
                            AppRoleName = "SUB DIVISIONAL OFFICER",
                            RoleLevel = 8,
                            RoleName = "Sub Divisional Officer"
                        },
                        new
                        {
                            Id = 128,
                            AppRoleName = "EXECUTIVE ENGINEER HQ",
                            RoleLevel = 4,
                            RoleName = "XEN HO Drainage"
                        },
                        new
                        {
                            Id = 83,
                            AppRoleName = "DWS",
                            RoleLevel = 5,
                            RoleName = "XEN/DWS"
                        },
                        new
                        {
                            Id = 6,
                            AppRoleName = "PRINCIPAL SECRETARY",
                            RoleLevel = 2,
                            RoleName = "Principal Secretary"
                        },
                        new
                        {
                            Id = 8,
                            AppRoleName = "CIRCLE OFFICER",
                            RoleLevel = 6,
                            RoleName = "Superintending Engineer"
                        },
                        new
                        {
                            Id = 1,
                            AppRoleName = "Administrator",
                            RoleLevel = 1,
                            RoleName = "Administrator"
                        });
                });

            modelBuilder.Entity("Noc_App.Models.ViewModel.DashboardPendencyViewModel", b =>
                {
                    b.Property<string>("ApplicationID")
                        .HasColumnType("text");

                    b.Property<string>("ApplyDate")
                        .HasColumnType("text");

                    b.Property<string>("Division")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Pendency")
                        .HasColumnType("integer");

                    b.Property<string>("ProcessedToRole")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.ToTable("DashboardPendencyViewModel");
                });

            modelBuilder.Entity("Noc_App.Models.ViewModel.GrantUnprocessedAppDetails", b =>
                {
                    b.Property<string>("ApplicantEmailID")
                        .HasColumnType("text");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DivisionId")
                        .HasColumnType("integer");

                    b.Property<string>("DivisionName")
                        .HasColumnType("text");

                    b.Property<long>("GrantApprovalDocId")
                        .HasColumnType("bigint");

                    b.Property<long>("GrantApprovalId")
                        .HasColumnType("bigint");

                    b.Property<string>("Hadbast")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("IsForwarded")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShortFall")
                        .HasColumnType("boolean");

                    b.Property<string>("LastForwardedByRole")
                        .HasColumnType("text");

                    b.Property<string>("LocationDetails")
                        .HasColumnType("text");

                    b.Property<string>("LoggedInRole")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NocNumber")
                        .HasColumnType("text");

                    b.Property<int>("NocPermissionTypeID")
                        .HasColumnType("integer");

                    b.Property<int>("NocTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProjectTypeDetail")
                        .HasColumnType("text");

                    b.Property<string>("PlotNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PreviousDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PreviousProcessLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ProcessedLevel")
                        .HasColumnType("integer");

                    b.Property<string>("ProcessedToRole")
                        .HasColumnType("text");

                    b.Property<string>("ProcessedToUser")
                        .HasColumnType("text");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("SiteAreaUnitId")
                        .HasColumnType("integer");

                    b.Property<int>("SubDivisionId")
                        .HasColumnType("integer");

                    b.Property<string>("SubDivisionName")
                        .HasColumnType("text");

                    b.Property<string>("TehsilBlockName")
                        .HasColumnType("text");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<int>("VillageID")
                        .HasColumnType("integer");

                    b.Property<string>("VillageName")
                        .HasColumnType("text");

                    b.Property<int>("rejectionmust")
                        .HasColumnType("integer");

                    b.ToTable("GrantUnprocessedAppDetails");
                });

            modelBuilder.Entity("Noc_App.Models.ViewModel.ReportApplicationCountViewModel", b =>
                {
                    b.Property<long>("ApprovedCount")
                        .HasColumnType("bigint");

                    b.Property<long>("RejectedCount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalCount")
                        .HasColumnType("bigint");

                    b.ToTable("ReportApplicationCountViewModel");
                });

            modelBuilder.Entity("Noc_App.Models.VillageDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("PinCode")
                        .HasColumnType("integer");

                    b.Property<int>("TehsilBlockId")
                        .HasColumnType("integer");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("TehsilBlockId");

                    b.ToTable("VillageDetails");
                });

            modelBuilder.Entity("Noc_App.Models.DaysCheckMaster", b =>
                {
                    b.HasOne("Noc_App.Models.UserRoleDetails", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Noc_App.Models.DivisionDetails", b =>
                {
                    b.HasOne("Noc_App.Models.DistrictDetails", "District")
                        .WithMany("Division")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalDetail", b =>
                {
                    b.HasOne("Noc_App.Models.GrantApprovalMaster", "GrantApproval")
                        .WithMany()
                        .HasForeignKey("ApprovalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.GrantDetails", "Grant")
                        .WithMany()
                        .HasForeignKey("GrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.RecommendationDetail", "RecommendationDetail")
                        .WithMany()
                        .HasForeignKey("RecommendationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grant");

                    b.Navigation("GrantApproval");

                    b.Navigation("RecommendationDetail");
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalProcessDocumentsDetails", b =>
                {
                    b.HasOne("Noc_App.Models.GrantApprovalDetail", "GrantApproval")
                        .WithOne("GrantApprovalProcessDocuments")
                        .HasForeignKey("Noc_App.Models.GrantApprovalProcessDocumentsDetails", "GrantApprovalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantApproval");
                });

            modelBuilder.Entity("Noc_App.Models.GrantDetails", b =>
                {
                    b.HasOne("Noc_App.Models.NocPermissionTypeDetails", "NocPermissionType")
                        .WithMany("Grants")
                        .HasForeignKey("NocPermissionTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.NocTypeDetails", "NocType")
                        .WithMany("Grants")
                        .HasForeignKey("NocTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.PlanSanctionAuthorityMaster", "PlanSanctionAuthorityMaster")
                        .WithMany()
                        .HasForeignKey("PlanSanctionAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.ProjectTypeDetails", "ProjectType")
                        .WithMany("Grants")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.SiteAreaUnitDetails", "SiteAreaUnits")
                        .WithMany()
                        .HasForeignKey("SiteAreaUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.VillageDetails", "Village")
                        .WithMany("Grants")
                        .HasForeignKey("VillageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NocPermissionType");

                    b.Navigation("NocType");

                    b.Navigation("PlanSanctionAuthorityMaster");

                    b.Navigation("ProjectType");

                    b.Navigation("SiteAreaUnits");

                    b.Navigation("Village");
                });

            modelBuilder.Entity("Noc_App.Models.GrantKhasraDetails", b =>
                {
                    b.HasOne("Noc_App.Models.GrantDetails", "Grant")
                        .WithMany("Khasras")
                        .HasForeignKey("GrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.SiteAreaUnitDetails", "Units")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grant");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("Noc_App.Models.GrantPaymentDetails", b =>
                {
                    b.HasOne("Noc_App.Models.GrantDetails", "Grant")
                        .WithMany()
                        .HasForeignKey("GrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grant");
                });

            modelBuilder.Entity("Noc_App.Models.GrantRejectionShortfallSection", b =>
                {
                    b.HasOne("Noc_App.Models.GrantApprovalDetail", "GrantApprovalDetail")
                        .WithMany("GrantRejectionShortfallSection")
                        .HasForeignKey("GrantApprovalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantApprovalDetail");
                });

            modelBuilder.Entity("Noc_App.Models.GrantSectionsDetails", b =>
                {
                    b.HasOne("Noc_App.Models.GrantRejectionShortfallSection", "GrantRejectionShortfallSection")
                        .WithMany("GrantSectionsDetails")
                        .HasForeignKey("SectionId");

                    b.Navigation("GrantRejectionShortfallSection");
                });

            modelBuilder.Entity("Noc_App.Models.OwnerDetails", b =>
                {
                    b.HasOne("Noc_App.Models.GrantDetails", "Grant")
                        .WithMany("Owners")
                        .HasForeignKey("GrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noc_App.Models.OwnerTypeDetails", "OwnerType")
                        .WithMany("Owners")
                        .HasForeignKey("OwnerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grant");

                    b.Navigation("OwnerType");
                });

            modelBuilder.Entity("Noc_App.Models.SiteUnitMaster", b =>
                {
                    b.HasOne("Noc_App.Models.SiteAreaUnitDetails", "SiteAreaUnits")
                        .WithMany()
                        .HasForeignKey("SiteAreaUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SiteAreaUnits");
                });

            modelBuilder.Entity("Noc_App.Models.SubDivisionDetails", b =>
                {
                    b.HasOne("Noc_App.Models.DivisionDetails", "Division")
                        .WithMany("SubDivision")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("Noc_App.Models.TehsilBlockDetails", b =>
                {
                    b.HasOne("Noc_App.Models.SubDivisionDetails", "SubDivision")
                        .WithMany("TehsilBlock")
                        .HasForeignKey("SubDivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubDivision");
                });

            modelBuilder.Entity("Noc_App.Models.VillageDetails", b =>
                {
                    b.HasOne("Noc_App.Models.TehsilBlockDetails", "TehsilBlock")
                        .WithMany("Village")
                        .HasForeignKey("TehsilBlockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TehsilBlock");
                });

            modelBuilder.Entity("Noc_App.Models.DistrictDetails", b =>
                {
                    b.Navigation("Division");
                });

            modelBuilder.Entity("Noc_App.Models.DivisionDetails", b =>
                {
                    b.Navigation("SubDivision");
                });

            modelBuilder.Entity("Noc_App.Models.GrantApprovalDetail", b =>
                {
                    b.Navigation("GrantApprovalProcessDocuments");

                    b.Navigation("GrantRejectionShortfallSection");
                });

            modelBuilder.Entity("Noc_App.Models.GrantDetails", b =>
                {
                    b.Navigation("Khasras");

                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Noc_App.Models.GrantRejectionShortfallSection", b =>
                {
                    b.Navigation("GrantSectionsDetails");
                });

            modelBuilder.Entity("Noc_App.Models.NocPermissionTypeDetails", b =>
                {
                    b.Navigation("Grants");
                });

            modelBuilder.Entity("Noc_App.Models.NocTypeDetails", b =>
                {
                    b.Navigation("Grants");
                });

            modelBuilder.Entity("Noc_App.Models.OwnerTypeDetails", b =>
                {
                    b.Navigation("Owners");
                });

            modelBuilder.Entity("Noc_App.Models.ProjectTypeDetails", b =>
                {
                    b.Navigation("Grants");
                });

            modelBuilder.Entity("Noc_App.Models.SubDivisionDetails", b =>
                {
                    b.Navigation("TehsilBlock");
                });

            modelBuilder.Entity("Noc_App.Models.TehsilBlockDetails", b =>
                {
                    b.Navigation("Village");
                });

            modelBuilder.Entity("Noc_App.Models.VillageDetails", b =>
                {
                    b.Navigation("Grants");
                });
#pragma warning restore 612, 618
        }
    }
}
